#### 基本設定

# 既定のPrefixキー(Ctrl+b)の割り当てを解除
unbind-key C-b
# bind Ctrl-q to prefix
set -g prefix C-q
bind-key C-q send-prefix
# set -g prefix C-Space
# bind Space send-prefix

# 256色を使う
set -g default-terminal 'screen-256color'
set -g terminal-overrides 'xterm:colors=256'

# 履歴の表示数を増やす
set -g history-limit 10000

# ウィンドウとペインの番号を1から開始する（デフォルト0）
set-option -g base-index 1
set-window-option -g pane-base-index 1

set-option -g focus-events on #Neovim側にフォーカス情報を渡すのに必要なようです。#フォーカスしているペインの設定
setw -g window-active-style bg=colour0
#フォーカスしていないペインの設定
setw -g window-style bg=colour16

#### KEY BIND

# vimライクに
setw -g mode-keys vi

# Prefix+hjkl でペイン移動
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Prefix + Ctrl-h/l でウィンドウ切り替え
# Prefix + Ctrl-h,h,h,h,...と連打できる
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# prefix + | で画面を縦に分割
bind-key | split-window -h

# prefix + - で画面を横に分割
bind-key - split-window -v

# ペインサイズを上下左右（Prefix+JKHL）に変更
# Prefix+J,J,J,J,...と連打してリサイズ可能
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5


# windowを前後に並び替える
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1 

# Ctrl-o でペインをローテーションしながら移動
# Prefix を用いないのでタイプが楽だが、Ctrl-o を使用してしまう
# 他のソフトウェアの設定に支障をきたさないように注意
# bind-key -n C-o select-pane -t :.+

# Prefix+v でコピーモード開始
bind-key v copy-mode \; display "Copy mode!"
#bind-key -t vi-copy v begin-selection

# Prefix+Enter/y でコピー
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
# bind-key -t vi-copy y     copy-pipe "reattach-to-user-namespace pbcopy"

# Prefix+p でペースト
# クリップボードにも保存されているので Cmd-v でもペースト可能
bind-key p paste-buffer


#### STATUS BAR

# ステータスバーに日時を表示する
#set-option -g status-right '#(get_ssid) #(battery -c tmux) [%Y-%m-%d(%a) %H:%M]'

# ステータスバーをトップに配置する
# set-option -g status-position top

# センタライズ（主にウィンドウ番号など）
set-option -g status-justify centre

# Wi-Fi、バッテリー残量、現在時刻
# 最右に表示
# set-option -g status-right '#(get_ssid) #(battery -c tmux) [%Y-%m-%d(%a) %H:%M]'

# ステータスバーを1秒毎に描画し直す
set-option -g status-interval 1

# 左右のステータスバーの長さを決定する
#set -g status-attr dim
# set -g status-left-length 60
# set -g status-right-length 90

# powerline
set-option -g status-interval 2
set-option -g status-left "#(~/dotfiles/.tmux/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/dotfiles/.tmux/tmux-powerline/powerline.sh right)"


#### COLOUR (Solarized dark)

# default statusbar colors
set-option -g status-bg black #base02
set-option -g status-fg yellow #yellow
# set-option -g status-attr default

# default window title colors
# set-window-option -g window-status-fg brightblue #base0
# set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
# set-window-option -g window-status-current-fg brightred #orange
# set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
# set-option -g pane-border-fg black #base02
# set-option -g pane-active-border-fg brightgreen #base01

# message text
# set-option -g message-bg black #base02
# set-option -g message-fg brightred #orange

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green

# bell
if-shell "uname | grep -q Darwin" \
  'set-window-option -g window-status-bell-style fg=black,bg=red #base02, red'

# if-shell "uname | grep -q Darwin" \
#   'set -g default-command "reattach-to-user-namespace -l /usr/local/bin/zsh"'

# if-shell "uname | grep -q ARM64" \
  # 'set -g default-command "reattach-to-user-namespace -l /bin/zsh"'



# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/vim-tmux-focus-events'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# continuum
# set -g @continuum-restore 'on'

# resurrect
set-option -g @resurrect-strategy-vim 'session'
set -g @resurrect-processes 'mysql ssh php'
run -b '~/.tmux/plugins/tpm/tpm'
# Automatic tpm installation
# https://github.com/tmux-plugins/tpm/issues/105
setenv -g TMUX_PLUGIN_MANAGER_PATH '$HOME/.tmux/plugins/'
# if-shell '[[ ! -d ~/.tmux/plugins/tpm ]]' 'run-shell "git clone https://github.com/tmux-plugins/tpm \" ~/.tmux/plugins/tpm\" && \" ~/.tmux/plugins\"/tpm/scripts/install_plugins.sh"'
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
#if "test ! -d $HOME/.tmux/plugins/tpm" \
#  "run 'mkdir -p $HOME/.tmux/plugins; git clone --single-branch --depth 1 https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm; ~/.tmux/plugins/tpm/scripts/install_plugins.sh'"

# Initialize tpm (keep this line at the very bottom of tmux.conf)
